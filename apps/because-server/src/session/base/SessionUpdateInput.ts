/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ActivityWhereUniqueInput } from "../../activity/base/ActivityWhereUniqueInput";

import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsDate,
  IsEnum,
  IsInt,
  Min,
  Max,
} from "class-validator";

import { Type } from "class-transformer";
import { BookingUpdateManyWithoutSessionsInput } from "./BookingUpdateManyWithoutSessionsInput";
import { EnumSessionDayOfWeek } from "./EnumSessionDayOfWeek";
import { EnumSessionStatus } from "./EnumSessionStatus";
import { TransactionUpdateManyWithoutSessionsInput } from "./TransactionUpdateManyWithoutSessionsInput";
import { VenueWhereUniqueInput } from "../../venue/base/VenueWhereUniqueInput";

@InputType()
class SessionUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ActivityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ActivityWhereUniqueInput)
  @IsOptional()
  @Field(() => ActivityWhereUniqueInput, {
    nullable: true,
  })
  activity?: ActivityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  coach?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumSessionDayOfWeek,
  })
  @IsEnum(EnumSessionDayOfWeek)
  @IsOptional()
  @Field(() => EnumSessionDayOfWeek, {
    nullable: true,
  })
  dayOfWeek?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxParticipants?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumSessionStatus,
  })
  @IsEnum(EnumSessionStatus)
  @IsOptional()
  @Field(() => EnumSessionStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
    type: () => VenueWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VenueWhereUniqueInput)
  @IsOptional()
  @Field(() => VenueWhereUniqueInput, {
    nullable: true,
  })
  venue?: VenueWhereUniqueInput | null;
}

export { SessionUpdateInput as SessionUpdateInput };
